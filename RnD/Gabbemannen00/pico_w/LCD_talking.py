from machine import Pin, PWM, I2C
from i2c_lcd import I2cLcd
import time
from time import sleep

I2C_SDA = Pin(4)  # Adjust to your SDA-pin
I2C_SCL = Pin(5)  # Adjust to your SCL-pin
i2c = I2C(0, scl=I2C_SCL, sda=I2C_SDA, freq=100000)  # 100kHz is enough for the LCD

# configure buzzer (connect the buzzers (+) to pico GP16 and (-) to GND)
buzzer = PWM(Pin(16))
    
# function for making the buzzer to beep. The sound can be modified
# by changing the duration, volume or frequency as you wish.
    
def beep(duration=0.1, volume=20000, frequency=4000):
    buzzer.freq(frequency)
    buzzer.duty_u16(volume)
    
    time.sleep(duration)
    
    buzzer.duty_u16(0) #initialize the active buzzer and will only be activated when being called.
    
    
# Konfigurera LED:er (gr√∂n, r√∂d, bl√• LED)
green_led = Pin(14, Pin.OUT)  # Green LED
red_led = Pin(15, Pin.OUT)    # Red LED
blue_led = Pin(13, Pin.OUT)   # Blue LED

#starta programmet alltid med lamporna avst√§ngda
green_led.value(0)
red_led.value(0)
blue_led.value(0)

i2c_addresses = i2c.scan()
if not i2c_addresses:
    print("üö´ No I2C-device was found")
else:
    print(f"‚úÖ I2C-device found on adress: {hex(i2c_addresses[0])}")
    lcd = I2cLcd(i2c, 0x27, 2, 16)  # Anv√§nd r√§tt adress (0x27 eller 0x3F)
    
    print("This code will check if the LCD works, first we check if the 'turn on' and 'turn off' function works!.")
    
    time.sleep(5)

    print("üîÑ Restarting LCD...")
    
    time.sleep(2)
    
    lcd.backlight_off()
    lcd.clear()
    beep(duration=1, volume=15000, frequency=1000)
    print("üî¥ LCD: turned off")
    
    time.sleep(3)
    
    lcd.backlight_on()
    lcd.clear()
    print("üü¢ LCD: Turned on")
    beep(duration=0.1, volume=20000, frequency=3000)
    time.sleep(0.1)
    beep(duration=0.1, volume=20000, frequency=3000)
    time.sleep(0.1)
    time.sleep(2)
    
    print("‚è≥ Starting to connect LCD to Pico W...")
    
    time.sleep(2)
    
    print("üó£Ô∏è LCD will now start talking to you...")
    
    time.sleep(2)
    
    for _ in range(1):
        lcd.clear()
        lcd.putstr("LCD: zzzzzzzzzzzz")
        time.sleep(2)
        lcd.move_to(0,1)
        lcd.putstr("Waking LCD...")
        print("LCD: message displayed.")
        time.sleep(2)
        lcd.clear()
        time.sleep(1)
        lcd.putstr("Hello Gabriel (:")
        lcd.move_to(0,1)
        lcd.putstr("You woke me up!")
        print("LCD: message displayed.")
        time.sleep(5)  # Visa texten i 1 sekund
        lcd.clear()
        time.sleep(2)
        lcd.putstr("Im your LCD (=")
        lcd.move_to(0,1)
        lcd.putstr("Nice to meet you.")
        print("LCD: message displayed.")
        time.sleep(3)
        lcd.clear()
        time.sleep(1)
        lcd.putstr("Lemme tell you...")
        print("LCD: message displayed.")
        time.sleep(2)
        lcd.clear()
        time.sleep(2)
        lcd.putstr("because of u...")
        print("LCD: message displayed.")
        time.sleep(2)
        lcd.clear()
        time.sleep(2)
        lcd.putstr("i can finally...")
        print("LCD: message displayed.")
        time.sleep(2)
        lcd.clear()
        time.sleep(2)
        lcd.putstr("display text (=")
        print("LCD: message displayed.")
        time.sleep(3)
        lcd.clear()
    print("")
    print("‚úÖ LCD is now done displaying its messages.")
    print("üîÑ Continue loading...")
    time.sleep(3)
    
    for _ in range(3):
        lcd.clear()
        lcd.putstr("RSB Pi Pico W")
        time.sleep(2) 
        lcd.clear()
        lcd.putstr("Loading.")
        time.sleep(0.5)
        lcd.clear()
        lcd.putstr("Loading..")
        time.sleep(0.4)
        lcd.clear()
        lcd.putstr("Loading...")
        time.sleep(0.7)
        lcd.clear()
        lcd.putstr("Loading....")
        time.sleep(0.5)
        lcd.clear()
        lcd.putstr("Loading.....")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("Loading.......")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("Loading........")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("Loading.........")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("Loading..........")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("Loading...........")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("Loading............")
        time.sleep(0.1)
        lcd.clear()
        time.sleep(2)
        print("Displaying a moving smiley")
        lcd.putstr("-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_-_")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_-_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_-_-_")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_-_-_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_-_-_")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_-_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_-_")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-_")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-_")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("-_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr(" -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("  -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("   -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("    -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("     -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("      -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("       -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("        -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("         -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("          -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("           -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("            -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("             -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("              -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("               -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("                -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("                 -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("                  -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("                   -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("                    -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("       -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("      -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("       -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("          -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("          -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("       -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("    -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("       -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr("   -_-")
        time.sleep(0.1)
        lcd.clear()
        lcd.putstr(" -_-")
        time.sleep(0.1)
        lcd.clear()
        print("Building a standby message letter by letter...")
        lcd.putstr("S")
        time.sleep(0.5)
        lcd.clear()
        lcd.putstr("ST")
        time.sleep(0.5)
        lcd.clear()
        lcd.putstr("STA")
        time.sleep(0.5)
        lcd.clear()
        lcd.putstr("STAN")
        time.sleep(0.5)
        lcd.clear()
        lcd.putstr("STAND")
        time.sleep(0.5)
        lcd.clear()
        lcd.putstr("STANDB")
        time.sleep(0.5)
        lcd.clear()
        lcd.putstr("STANDBY")
        time.sleep(0.5)
        lcd.clear()
        lcd.putstr("STANDBY.")
        time.sleep(0.3)
        lcd.clear()
        lcd.putstr("STANDBY..")
        time.sleep(0.2)
        lcd.clear()
        lcd.putstr("STANDBY... (=")
        time.sleep(0.3)
        lcd.clear()
        lcd.putstr("....")
        time.sleep(0.4)
        lcd.clear()
        lcd.putstr(".......")
        time.sleep(0.3)
        lcd.clear()
        lcd.putstr("...........")
        time.sleep(0.2)
        lcd.clear()
        lcd.putstr("..............")
        time.sleep(0.2)
        lcd.clear()
    
    print("‚úÖ Loading done.")
    
     #Music that signals a connection successful with pico and the LCD
   
    beep(duration=0.1, volume=11000, frequency=1500)
    lcd.putstr("LCD: Connected")
    lcd.move_to(0,1) #move the cursor to the second line of the LCD
    lcd.putstr("to RSB Pico W.")
    time.sleep(0.1)
    
    lcd.clear()

    beep(duration=0.1, volume=9000, frequency=1000)
    lcd.putstr("LCD: Connected")
    lcd.move_to(0,1) #move the cursor to the second line of the LCD
    lcd.putstr("to RSB Pico W.")
    time.sleep(0.1)
    
    lcd.clear()
  
    beep(duration=0.1, volume=7000, frequency=500)
    lcd.putstr("LCD: Connected")
    lcd.move_to(0,1) #move the cursor to the second line of the LCD
    lcd.putstr("to RSB Pico W.")
    time.sleep(0.1)
    
    lcd.clear()

    beep(duration=0.1, volume=4000, frequency=1000)
    lcd.putstr("LCD: Connected")
    lcd.move_to(0,1) #move the cursor to the second line of the LCD
    lcd.putstr("to RSB Pico W.")
    time.sleep(0.1)
    
    lcd.clear()
    
    beep(duration=0.1, volume=7000, frequency=2000)
    lcd.putstr("LCD: Connected")
    lcd.move_to(0,1) #move the cursor to the second line of the LCD
    lcd.putstr("to RSB Pico W.")
    time.sleep(0.1)
    
    lcd.clear()
    
    beep(duration=0.1, volume=9000, frequency=1000)
    lcd.putstr("LCD: Connected...")
    lcd.move_to(0,1) #move the cursor to the second line of the LCD
    lcd.putstr("to RSB Pico W.")
    time.sleep(0.1)
    
    lcd.clear()
    
    beep(duration=0.1, volume=9000, frequency=1000)
    lcd.putstr("LCD: Connected")
    lcd.move_to(0,1) #move the cursor to the second line of the LCD
    lcd.putstr("to RSB Pico W.")
    time.sleep(0.1)
    
    lcd.clear()
    
    lcd.putstr("LCD: Connected")
    lcd.move_to(0,1) #move the cursor to the second line of the LCD
    lcd.putstr("to RSB Pico W.")
    
    print("‚úÖ Your LCD and your Pico W is now connected (=")
    
   
   
    

    

